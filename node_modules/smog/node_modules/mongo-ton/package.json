{
  "name": "mongo-ton",
  "description": "MongoDB native types for ton",
  "version": "0.0.3",
  "homepage": "http://github.com/wearefractal/mongo-ton",
  "repository": {
    "type": "git",
    "url": "git://github.com/wearefractal/mongo-ton.git"
  },
  "author": {
    "name": "Fractal",
    "email": "contact@wearefractal.com",
    "url": "http://wearefractal.com/"
  },
  "main": "./index.js",
  "dependencies": {
    "coffee-script": "*",
    "mongodb": "*",
    "ton": "*"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "scripts": {
    "test": "mocha --compilers coffee:coffee-script"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/wearefractal/mongo-ton/raw/master/LICENSE"
    }
  ],
  "readme": "![status](https://secure.travis-ci.org/wearefractal/mongo-ton.png?branch=master)\n\n## Information\n\n<table>\n<tr> \n<td>Package</td><td>mongo-ton</td>\n</tr>\n<tr>\n<td>Description</td>\n<td>MongoDB native types for ton</td>\n</tr>\n<tr>\n<td>Node Version</td>\n<td>>= 0.4</td>\n</tr>\n</table>\n\nThis is identical to bson-ton but uses node-mongodb-native types which differ slightly.\n\n## Usage\n\n```coffee-script\nton = require 'ton'\nrequire 'mongo-ton'\n\nstr = ton.stringify {bson doc}\ndoc = ton.parse str\n```\n\n## Comparison\n\n### Initial document\n\n```javascript\n{\n    _id: new ObjectID(\"4fa202c54cc3da640c000001\"),\n    string: \"test\",\n    regex: /test/,\n    date: new Date('1/2/1978'),\n    int: 42,\n    float: 33.3333,\n    bool: true,\n    code: new Code('console.log(i);', {\n        i: 1\n    }),\n    long: Long.fromNumber(20),\n    binary: new Binary(new Buffer(\"test\")),\n    minkey: new MinKey,\n    maxkey: new MaxKey,\n    double: new Double(100),\n    ref: new DBRef('space', new ObjectID(\"4fa202c54cc3da640c000002\"), 'stuff'),\n    arr: [1, 2, 3]\n}\n```\n\n### ton.stringify\n\nAll types and data preserved.\n\n```javascript\n{\n    \"_id\": new ObjectID(\"4fa202c54cc3da640c000001\"),\n    \"string\": \"test\",\n    \"regex\": /test/,\n    \"date\": new Date(\"1978-01-02T07:00:00.000Z\"),\n    \"int\": 42,\n    \"float\": 33.3333,\n    \"bool\": true,\n    \"code\": new Code(\"console.log(i);\", {\n        \"i\": 1\n    }),\n    \"long\": new Long(20, 0),\n    \"binary\": new Binary(new Buffer(\"test\"), \"0\"),\n    \"minkey\": new MinKey(),\n    \"maxkey\": new MaxKey(),\n    \"double\": new Double(100),\n    \"ref\": new DBRef(\"space\", new ObjectID(\"4fa202c54cc3da640c000002\"), \"stuff\"),\n    \"arr\": [1, 2, 3]\n}\n```\n\n### JSON.stringify\n\nAll types and some data lost - you would have to reconstruct this manually.\n\n```javascript\n{\n    \"_id\": \"4fa202c54cc3da640c000001\",\n    \"string\": \"test\",\n    \"regex\": {},\n    \"date\": \"1978-01-02T07:00:00.000Z\",\n    \"int\": 42,\n    \"float\": 33.3333,\n    \"bool\": true,\n    \"code\": {\n        \"scope\": {\n            \"i\": 1\n        },\n        \"code\": \"console.log(i);\"\n    },\n    \"long\": \"20\",\n    \"binary\": \"dGVzdA==\",\n    \"minkey\": {\n        \"_bsontype\": \"MinKey\"\n    },\n    \"maxkey\": {\n        \"_bsontype\": \"MaxKey\"\n    },\n    \"double\": 100,\n    \"ref\": {\n        \"$ref\": \"space\",\n        \"$id\": \"4fa202c54cc3da640c000002\",\n        \"$db\": \"stuff\"\n    },\n    \"arr\": [1, 2, 3]\n}\n```\n\n## LICENSE\n\n(MIT License)\n\nCopyright (c) 2012 Fractal <contact@wearefractal.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "_id": "mongo-ton@0.0.3",
  "_from": "mongo-ton@>=0.0.2"
}
