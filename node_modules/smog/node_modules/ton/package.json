{
  "name": "ton",
  "description": "Typed Object Notation",
  "version": "0.0.2",
  "homepage": "http://github.com/wearefractal/ton",
  "repository": {
    "type": "git",
    "url": "git://github.com/wearefractal/ton.git"
  },
  "author": {
    "name": "Fractal",
    "email": "contact@wearefractal.com",
    "url": "http://wearefractal.com/"
  },
  "main": "./index.js",
  "dependencies": {
    "coffee-script": "*"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "scripts": {
    "test": "mocha --compilers coffee:coffee-script"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/wearefractal/ton/raw/master/LICENSE"
    }
  ],
  "readme": "![status](https://secure.travis-ci.org/wearefractal/ton.png?branch=master)\n\n## Information\n\n<table>\n<tr> \n<td>Package</td><td>ton</td>\n</tr>\n<tr>\n<td>Description</td>\n<td>Typed Object Notation</td>\n</tr>\n<tr>\n<td>Node Version</td>\n<td>>= 0.4</td>\n</tr>\n</table>\n\n## Prefix\n\nJSON supports 6 types - Number, String, Boolean, Array, Object, and null. Wouldn't it be nice if you could define your own types? Why be limited to 6 types? ObjectIDs, KoolKlass10, Integer32, you name it - adding your own types is a breeze.\n\n## Usage\n\n```coffee-script\nton = require 'ton'\nobj =\n  d: new Date('1/9/1979')\n  i: Infinity\n  x: NaN\n  w: \"test\"\n  a: true\n\nstr = ton.stringify obj\nton.parse str\n```\n\n## Types supported\n\nThese are included by default in ton:\n\n```\nNumber\nString\nBoolean\nArray\nObject\nnull\nundefined\nDate\nRegExp\nFunction\nNaN\nInfinity\n```\n\n### Adding types\n\n```coffee-script\n# Your function either returns a value or undefined\n# If it returns a value that will be used in the stringify/parse process\n# Your output should be valid javascript\nton.add 'CoolType', (val) -> \"new CoolType(#{val.name})\" if val instanceof CoolType\n\n# Now this will work\nstr = ton.stringify test: new CoolType(\"tom\")\n# str === {\"test\":new CoolType(\"tom\")}\n```\n\n### Removing types\n\n```coffee-script\n# All of the built-in types can be removed as well\nton.remove 'CoolType'\n```\n\n\n## LICENSE\n\n(MIT License)\n\nCopyright (c) 2012 Fractal <contact@wearefractal.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "_id": "ton@0.0.2",
  "_from": "ton@>=0.0.2"
}
